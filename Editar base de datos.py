import sqlite3

# Funci√≥n para conectar a la base de datos
def conectar():
    return sqlite3.connect("videojuegos.db")

# Funci√≥n para agregar un videojuego con manejo de transacciones
def agregar_videojuego():
    conexion = conectar()
    cursor = conexion.cursor()
    
    try:
        nombre = input("Introduce el nombre del videojuego: ")
        genero = input("Introduce el g√©nero del videojuego: ")
        ano_lanzamiento = int(input("Introduce el a√±o de lanzamiento: "))
        id_desarrollador = int(input("Introduce el ID del desarrollador: "))

        cursor.execute('BEGIN TRANSACTION')  # Inicia la transacci√≥n
        cursor.execute('''
            INSERT INTO Videojuegos (Nombre, Genero, Ano_Lanzamiento, ID_Desarrollador) VALUES (?, ?, ?, ?)
        ''', (nombre, genero, ano_lanzamiento, id_desarrollador))
        conexion.commit()  # Guarda cambios si no hay errores

        print("‚úÖ ¬°Videojuego agregado con √©xito!")

    except sqlite3.Error as e:
        conexion.rollback()  # Revierte los cambios en caso de error
        print(f"‚ùå Error al agregar el videojuego: {e}")

    finally:
        conexion.close()  # Cierra la conexi√≥n

# Funci√≥n para consultar videojuegos
def consultar_videojuegos():
    conexion = conectar()
    cursor = conexion.cursor()

    try:
        cursor.execute('SELECT * FROM Videojuegos')
        videojuegos = cursor.fetchall()

        if videojuegos:
            print("\nüìú Lista de videojuegos:")
            for v in videojuegos:
                print(v)
        else:
            print("‚ùå No hay videojuegos registrados.")

    except sqlite3.Error as e:
        print(f"‚ùå Error al consultar videojuegos: {e}")

    finally:
        conexion.close()

# Funci√≥n para modificar un videojuego con manejo de transacciones
def modificar_videojuego():
    conexion = conectar()
    cursor = conexion.cursor()

    try:
        id_videojuego = int(input("Introduce el ID del videojuego a modificar: "))
        nuevo_nombre = input("Introduce el nuevo nombre del videojuego: ")
        nuevo_genero = input("Introduce el nuevo g√©nero del videojuego: ")
        nuevo_ano_lanzamiento = int(input("Introduce el nuevo a√±o de lanzamiento: "))
        nuevo_id_desarrollador = int(input("Introduce el nuevo ID del desarrollador: "))

        cursor.execute('BEGIN TRANSACTION')
        cursor.execute('''
            UPDATE Videojuegos 
            SET Nombre = ?, Genero = ?, Ano_Lanzamiento = ?, ID_Desarrollador = ? 
            WHERE ID_Videojuego = ?
        ''', (nuevo_nombre, nuevo_genero, nuevo_ano_lanzamiento, nuevo_id_desarrollador, id_videojuego))
        conexion.commit()

        print("‚úÖ ¬°Videojuego modificado con √©xito!")

    except sqlite3.Error as e:
        conexion.rollback()
        print(f"‚ùå Error al modificar el videojuego: {e}")

    finally:
        conexion.close()

# Funci√≥n para eliminar un videojuego con manejo de transacciones
def eliminar_videojuego():
    conexion = conectar()
    cursor = conexion.cursor()

    try:
        id_videojuego = int(input("Introduce el ID del videojuego a eliminar: "))
        
        cursor.execute('BEGIN TRANSACTION')
        cursor.execute('DELETE FROM Videojuegos WHERE ID_Videojuego = ?', (id_videojuego,))
        conexion.commit()

        print("‚úÖ ¬°Videojuego eliminado con √©xito!")

    except sqlite3.Error as e:
        conexion.rollback()
        print(f"‚ùå Error al eliminar el videojuego: {e}")

    finally:
        conexion.close()

# Men√∫ principal con navegaci√≥n interactiva
def main():
    while True:
        print("\nüéÆ MEN√ö DE VIDEOJUEGOS INDIES")
        print("1Ô∏è‚É£ Agregar un videojuego")
        print("2Ô∏è‚É£ Consultar videojuegos")
        print("3Ô∏è‚É£ Modificar un videojuego")
        print("4Ô∏è‚É£ Eliminar un videojuego")
        print("5Ô∏è‚É£ Salir")

        try:
            opcion = int(input("üîπ Selecciona una opci√≥n: "))

            if opcion == 1:
                agregar_videojuego()
            elif opcion == 2:
                consultar_videojuegos()
            elif opcion == 3:
                modificar_videojuego()
            elif opcion == 4:
                eliminar_videojuego()
            elif opcion == 5:
                print("üëã ¬°Hasta luego!")
                break
            else:
                print("‚ùå Opci√≥n no v√°lida, intenta de nuevo.")
        
        except ValueError:
            print("‚ùå Ingresa un n√∫mero v√°lido.")

if __name__ == "__main__":
    main()
